{"remainingRequest":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/src/views/Post.vue?vue&type=style&index=0&id=66b2084c&scoped=true&lang=css&","dependencies":[{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/src/views/Post.vue","mtime":1618353804558},{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kai/Documents/BYU W2021/CS 260/CP3/cp3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogIC8qIEFsd2F5cyBzZXQgdGhlIG1hcCBoZWlnaHQgZXhwbGljaXRseSB0byBkZWZpbmUgdGhlIHNpemUgb2YgdGhlIGRpdgogICAgICAgKiBlbGVtZW50IHRoYXQgY29udGFpbnMgdGhlIG1hcC4gKi8KI21hcCB7CiAgaGVpZ2h0OiA1MHZ3OwogIGJvcmRlcjogc29saWQgMnB4ICM0NTQ1NDU7IC8qb255eCovCn0KCmgyIHsKICBmb250LWZhbWlseTogJ0FudG9uJywgc2Fucy1zZXJpZjsKfQoKLnBvc3RfIHsKICBib3JkZXI6IHNvbGlkIDVweCAjNDU0NTQ1OwogIHBhZGRpbmc6IDVweDsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlNmRkOwp9CgoucG9zdF8gLnBpY3R1cmUgaW1nIHsKICBib3JkZXI6IHNvbGlkIDJweCAjNDU0NTQ1Owp9CgoubGluazp2aXNpdGVkLCAubGluazpsaW5rIHsKICBjb2xvcjogIzIyMjIyMjsKfQoKcCB7CiAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMgSlAnLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMS40ZW0KfQoKCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAucG9zdCBpbWcgewogICAgd2lkdGg6IDEwMCU7CiAgICBib3JkZXI6IHNvbGlkIDJweCAjNDU0NTQ1OyAvKm9ueXgqLwogIH0KCiAgLnBvc3QgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgfQp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwMXB4KSB7CiAgLnBvc3QgaW1nIHsKICAgIGZsb2F0OiByaWdodDsKICAgIHdpZHRoOiA1MCU7CiAgICBib3JkZXI6IHNvbGlkIDJweCAjNDU0NTQ1OyAvKm9ueXgqLwogIH0KCiAgLnBvc3QgewogICAgZmxvYXQ6IGxlZnQ7CiAgfQp9Cg=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <title>{{this.post}}</title>\n\n    <div class='header'>\n      <!-- <img id='headPic' :src=\"'/images/'+post\" style='width: 100%' :alt='post.imagesLoc[0]'/> -->\n      <div class='page-title'>\n        <h1>{{this.post}}</h1>\n      </div>\n    </div>\n\n    <div class='content'>\n      <h2>{{this.post}}</h2>\n      <!-- <div class='post_' v-for=\"index in length(post.text)\" :key=\"index\"> -->\n        <div class='picture'>\n          <!-- <img :src=\"'/images/'+post.images[index + 1]\" style='width: 100%' alt='post.imagesLoc[index+1]'/> -->\n        </div>\n      <!-- <p>{{post.text[index]}}</p> -->\n      <!-- </div> -->\n      </div>\n\n      <br>\n      <p>Click on any picture to see its location on the map.</p>\n      <GmapMap id=\"map\" ref=\"mapRef\" :position=\"google && new google.maps.LatLng(1.38, 103.8)\">\n</GmapMap>\n  </div>\n</template>\n\n<script>\n  import {gmapApi} from 'vue2-google-maps'\n  export default {\n    name: \"Post\",\n    mounted () {\n    // At this point, the child GmapMap has been mounted, but\n    // its map has not been initialized.\n    // Therefore we need to write mapRef.$mapPromise.then(() => ...)\n\n    this.$refs.mapRef.$mapPromise.then((map) => {\n      map.panTo({lat: 40.249232, lng: -111.649238})\n    })\n  },\n  computed: {\n    google: gmapApi,\n  },\n    data(){\n      return{\n        // map,\n      }\n    },\n    props:{\n      post: Array,\n    },\n    created:{\n      // initMap(lat, lon) {\n      //   if (!lat || !lon) {\n      //     lat = 40.249232;\n      //     lon = -111.649238;\n      //   }\n      //   map = new google.maps.Map(document.getElementById(\"map\"), {\n      //     center: {lat: lat, lng: lon},\n      //     zoom: 15,\n      //     mapTypeId: 'satellite'\n      //   });\n      //\n      //   new google.maps.Marker({\n      //     position: {lat: lat, lng: lon},\n      //     map,\n      //     title: toString(lat) + \", \" + toString(lon)\n      //   });\n      // }\n    },\n    methods:{\n      // createMap(element) {\n      //   let loc = element.currentTarget.alt.split(' ');\n      //   let lat = parseFloat(loc[0]);\n      //   let lon = parseFloat(loc[1]);\n      //   initMap(lat, lon);\n      // }\n    },\n  };\n</script>\n\n<style scoped>\n  /* Always set the map height explicitly to define the size of the div\n       * element that contains the map. */\n#map {\n  height: 50vw;\n  border: solid 2px #454545; /*onyx*/\n}\n\nh2 {\n  font-family: 'Anton', sans-serif;\n}\n\n.post_ {\n  border: solid 5px #454545;\n  padding: 5px;\n  width: 100%;\n  background-color: #efe6dd;\n}\n\n.post_ .picture img {\n  border: solid 2px #454545;\n}\n\n.link:visited, .link:link {\n  color: #222222;\n}\n\np {\n  font-family: 'Noto Sans JP', sans-serif;\n  font-size: 1.4em\n}\n\n\n@media only screen and (max-width: 500px) {\n  .post img {\n    width: 100%;\n    border: solid 2px #454545; /*onyx*/\n  }\n\n  .post {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n@media only screen and (min-width: 501px) {\n  .post img {\n    float: right;\n    width: 50%;\n    border: solid 2px #454545; /*onyx*/\n  }\n\n  .post {\n    float: left;\n  }\n}\n</style>\n"]}]}